// Code generated by MockGen. DO NOT EDIT.
// Source: app.go

// Package mock_configuration is a generated GoMock package.
package mock_configuration

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIAppConfiguration is a mock of IAppConfiguration interface.
type MockIAppConfiguration struct {
	ctrl     *gomock.Controller
	recorder *MockIAppConfigurationMockRecorder
}

// MockIAppConfigurationMockRecorder is the mock recorder for MockIAppConfiguration.
type MockIAppConfigurationMockRecorder struct {
	mock *MockIAppConfiguration
}

// NewMockIAppConfiguration creates a new mock instance.
func NewMockIAppConfiguration(ctrl *gomock.Controller) *MockIAppConfiguration {
	mock := &MockIAppConfiguration{ctrl: ctrl}
	mock.recorder = &MockIAppConfigurationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAppConfiguration) EXPECT() *MockIAppConfigurationMockRecorder {
	return m.recorder
}

// GetAppName mocks base method.
func (m *MockIAppConfiguration) GetAppName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAppName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAppName indicates an expected call of GetAppName.
func (mr *MockIAppConfigurationMockRecorder) GetAppName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAppName", reflect.TypeOf((*MockIAppConfiguration)(nil).GetAppName))
}

// GetAuthenticationService mocks base method.
func (m *MockIAppConfiguration) GetAuthenticationService() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAuthenticationService")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAuthenticationService indicates an expected call of GetAuthenticationService.
func (mr *MockIAppConfigurationMockRecorder) GetAuthenticationService() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAuthenticationService", reflect.TypeOf((*MockIAppConfiguration)(nil).GetAuthenticationService))
}

// GetCorsAllowedOrigins mocks base method.
func (m *MockIAppConfiguration) GetCorsAllowedOrigins() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCorsAllowedOrigins")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCorsAllowedOrigins indicates an expected call of GetCorsAllowedOrigins.
func (mr *MockIAppConfigurationMockRecorder) GetCorsAllowedOrigins() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCorsAllowedOrigins", reflect.TypeOf((*MockIAppConfiguration)(nil).GetCorsAllowedOrigins))
}

// GetEnableMetric mocks base method.
func (m *MockIAppConfiguration) GetEnableMetric() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnableMetric")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetEnableMetric indicates an expected call of GetEnableMetric.
func (mr *MockIAppConfigurationMockRecorder) GetEnableMetric() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnableMetric", reflect.TypeOf((*MockIAppConfiguration)(nil).GetEnableMetric))
}

// GetEnableTracer mocks base method.
func (m *MockIAppConfiguration) GetEnableTracer() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnableTracer")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetEnableTracer indicates an expected call of GetEnableTracer.
func (mr *MockIAppConfigurationMockRecorder) GetEnableTracer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnableTracer", reflect.TypeOf((*MockIAppConfiguration)(nil).GetEnableTracer))
}

// GetEnv mocks base method.
func (m *MockIAppConfiguration) GetEnv() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnv")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetEnv indicates an expected call of GetEnv.
func (mr *MockIAppConfigurationMockRecorder) GetEnv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnv", reflect.TypeOf((*MockIAppConfiguration)(nil).GetEnv))
}

// GetOtelCollector mocks base method.
func (m *MockIAppConfiguration) GetOtelCollector() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOtelCollector")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetOtelCollector indicates an expected call of GetOtelCollector.
func (mr *MockIAppConfigurationMockRecorder) GetOtelCollector() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOtelCollector", reflect.TypeOf((*MockIAppConfiguration)(nil).GetOtelCollector))
}

// GetPort mocks base method.
func (m *MockIAppConfiguration) GetPort() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPort")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPort indicates an expected call of GetPort.
func (mr *MockIAppConfigurationMockRecorder) GetPort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPort", reflect.TypeOf((*MockIAppConfiguration)(nil).GetPort))
}
